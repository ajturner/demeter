{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","requiresFormData","params","keys","some","key","value","toParam","type","constructor","name","processParams","newParams","forEach","_a","_b","param","firstElementType","JSON","stringify","join","valueOf","Array","isArray","encodeParam","map","arrayElem","encodeURIComponent","encodeQueryString","browserPonyfill","FormData","globalThis","File","Blob","encodeFormData","forceFormData","useFormData","formData","filename","append","ArcGISRequestError","Error","message","code","response","url","options","super","actualProto","setPrototypeOf","originalMessage","warn","console","getFetch","Promise","resolve","fetch","Headers","Response","Request","request","NODEJS_DEFAULT_REFERER_HEADER","getDefaultRequestOptions","DEFAULT_ARCGIS_REQUEST_OPTIONS","httpMethod","f","ArcGISAuthError","retry","getSession","retryLimit","tries","retryRequest","reject","then","session","newOptions","authentication","internalRequest","catch","e","checkForErrors","originalAuthError","error","messageCode","errorCode","status","parse","statusMessage","requestOptions","defaults","headers","rawResponse","fetchOptions","method","signal","credentials","indexOf","rawToken","portal","getToken","startsWith","suppressWarnings","ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING","originalUrl","err","token","getDomainCredentials","requestHeaders","hideToken","window","queryParams","urlWithQueryString","maxUrlLength","RegExp","test","body","document","referer","ok","json","jsonError","statusText","details","formattedMessage","trim","text","blob","data","truncatedUrl","toLowerCase","split","federatedServers","expires","Date","now","canRefresh","refreshCredentials","appendCustomParams","customOptions","baseOptions","requestOptionsKeys","reduce","cleanUrl","slice","queryFeatures","queryOptions","where","outFields","demeterMetadataCss","DemeterMetadata","async","getFeatureMetadata","featureLayerUrl","featureId","returnGeometry","resultRecordCount","outSR","feature","features","getNearbyFeatureMetadata","geometry","getSimilarFeatureMetadata","attributes","CMMN_NM","getTotalFeatureMetadata","field","aggregate","returnCountOnly","groupByFieldsForStatistics","similarFeatures","count","log","total","totalFeatures","location","queryGeometry","x","y","spatialReference","wkid","geometryType","distance","units","nearbyFeatures","convertAttributeByType","attribute","toLocaleDateString","render","h","Host","renderMetadata","id","viewFeature","open","class","onClick","OBJECTID","fields"],"sources":["./node_modules/@esri/arcgis-rest-feature-layer/node_modules/tslib/tslib.es6.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js","./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js","./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/request.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js","./node_modules/@esri/arcgis-rest-feature-layer/dist/esm/query.js","./src/components/demeter-metadata/demeter-metadata.css?tag=demeter-metadata&encapsulation=shadow","./src/components/demeter-metadata/demeter-metadata.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params) {\n    return Object.keys(params).some((key) => {\n        let value = params[key];\n        if (!value) {\n            return false;\n        }\n        if (value && value.toParam) {\n            value = value.toParam();\n        }\n        const type = value.constructor.name;\n        switch (type) {\n            case \"Array\":\n                return false;\n            case \"Object\":\n                return false;\n            case \"Date\":\n                return false;\n            case \"Function\":\n                return false;\n            case \"Boolean\":\n                return false;\n            case \"String\":\n                return false;\n            case \"Number\":\n                return false;\n            default:\n                return true;\n        }\n    });\n}\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params) {\n    const newParams = {};\n    Object.keys(params).forEach((key) => {\n        var _a, _b;\n        let param = params[key];\n        if (param && param.toParam) {\n            param = param.toParam();\n        }\n        if (!param &&\n            param !== 0 &&\n            typeof param !== \"boolean\" &&\n            typeof param !== \"string\") {\n            return;\n        }\n        const type = param.constructor.name;\n        let value;\n        // properly encodes objects, arrays and dates for arcgis.com and other services.\n        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n        // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n        switch (type) {\n            case \"Array\":\n                // Based on the first element of the array, classify array as an array of arrays, an array of objects\n                // to be stringified, or an array of non-objects to be comma-separated\n                // eslint-disable-next-line no-case-declarations\n                const firstElementType = (_b = (_a = param[0]) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name;\n                value =\n                    firstElementType === \"Array\"\n                        ? param // pass thru array of arrays\n                        : firstElementType === \"Object\"\n                            ? JSON.stringify(param) // stringify array of objects\n                            : param.join(\",\"); // join other types of array elements\n                break;\n            case \"Object\":\n                value = JSON.stringify(param);\n                break;\n            case \"Date\":\n                value = param.valueOf();\n                break;\n            case \"Function\":\n                value = null;\n                break;\n            case \"Boolean\":\n                value = param + \"\";\n                break;\n            default:\n                value = param;\n                break;\n        }\n        if (value ||\n            value === 0 ||\n            typeof value === \"string\" ||\n            Array.isArray(value)) {\n            newParams[key] = value;\n        }\n    });\n    return newParams;\n}\n//# sourceMappingURL=process-params.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams } from \"./process-params.js\";\n/**\n * Encodes keys and parameters for use in a URL's query string.\n *\n * @param key Parameter's key\n * @param value Parameter's value\n * @returns Query string with key and value pairs separated by \"&\"\n */\nexport function encodeParam(key, value) {\n    // For array of arrays, repeat key=value for each element of containing array\n    if (Array.isArray(value) && value[0] && Array.isArray(value[0])) {\n        return value\n            .map((arrayElem) => encodeParam(key, arrayElem))\n            .join(\"&\");\n    }\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nexport function encodeQueryString(params) {\n    const newParams = processParams(params);\n    return Object.keys(newParams)\n        .map((key) => {\n        return encodeParam(key, newParams[key]);\n    })\n        .join(\"&\");\n}\n//# sourceMappingURL=encode-query-string.js.map","module.exports = {\n  FormData: globalThis.FormData,\n  File: globalThis.File,\n  Blob: globalThis.Blob\n};\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams, requiresFormData } from \"./process-params.js\";\nimport { encodeQueryString } from \"./encode-query-string.js\";\nimport { FormData } from \"@esri/arcgis-rest-form-data\";\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nexport function encodeFormData(params, forceFormData) {\n    // see https://github.com/Esri/arcgis-rest-js/issues/499 for more info.\n    const useFormData = requiresFormData(params) || forceFormData;\n    const newParams = processParams(params);\n    if (useFormData) {\n        const formData = new FormData();\n        Object.keys(newParams).forEach((key) => {\n            if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n                /* To name the Blob:\n                 1. look to an alternate request parameter called 'fileName'\n                 2. see if 'name' has been tacked onto the Blob manually\n                 3. if all else fails, use the request parameter\n                */\n                const filename = newParams[\"fileName\"] || newParams[key].name || key;\n                formData.append(key, newParams[key], filename);\n            }\n            else {\n                formData.append(key, newParams[key]);\n            }\n        });\n        return formData;\n    }\n    else {\n        return encodeQueryString(params);\n    }\n}\n//# sourceMappingURL=encode-form-data.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This represents a generic error from an ArcGIS endpoint. There will be details about the error in the {@linkcode ArcGISRequestError.message},  {@linkcode ArcGISRequestError.originalMessage} properties on the error. You\n * can also access the original server response at  {@linkcode ArcGISRequestError.response} which may have additional details.\n *\n * ```js\n * request(someUrl, someOptions).catch(e => {\n *   if(e.name === \"ArcGISRequestError\") {\n *     console.log(\"Something went wrong with the request:\", e);\n *     console.log(\"Full server response\", e.response);\n *   }\n * })\n * ```\n */\nexport class ArcGISRequestError extends Error {\n    /**\n     * Create a new `ArcGISRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message, code, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        message = message || \"UNKNOWN_ERROR\";\n        code = code || \"UNKNOWN_ERROR_CODE\";\n        this.name = \"ArcGISRequestError\";\n        this.message =\n            code === \"UNKNOWN_ERROR_CODE\" ? message : `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISRequestError.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nexport function warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n//# sourceMappingURL=warn.js.map","module.exports.getFetch = function getFetch() {\n  return Promise.resolve({\n    fetch: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Response: globalThis.Response,\n    Request: globalThis.request\n  });\n};\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { encodeFormData } from \"./utils/encode-form-data.js\";\nimport { encodeQueryString } from \"./utils/encode-query-string.js\";\nimport { requiresFormData } from \"./utils/process-params.js\";\nimport { ArcGISRequestError } from \"./utils/ArcGISRequestError.js\";\nimport { warn } from \"./utils/warn.js\";\nimport { getFetch } from \"@esri/arcgis-rest-fetch\";\nexport const NODEJS_DEFAULT_REFERER_HEADER = `@esri/arcgis-rest-js`;\n/**\n * Sets the default options that will be passed in **all requests across all `@esri/arcgis-rest-js` modules**.\n *\n * ```js\n * import { setDefaultRequestOptions } from \"@esri/arcgis-rest-request\";\n *\n * setDefaultRequestOptions({\n *   authentication: ArcGISIdentityManager // all requests will use this session by default\n * })\n * ```\n *\n * You should **never** set a default `authentication` when you are in a server side environment where you may be handling requests for many different authenticated users.\n *\n * @param options The default options to pass with every request. Existing default will be overwritten.\n * @param hideWarnings Silence warnings about setting default `authentication` in shared environments.\n */\nexport function setDefaultRequestOptions(options, hideWarnings) {\n    if (options.authentication && !hideWarnings) {\n        warn(\"You should not set `authentication` as a default in a shared environment such as a web server which will process multiple users requests. You can call `setDefaultRequestOptions` with `true` as a second argument to disable this warning.\");\n    }\n    globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS = options;\n}\nexport function getDefaultRequestOptions() {\n    return (globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS || {\n        httpMethod: \"POST\",\n        params: {\n            f: \"json\"\n        }\n    });\n}\n/**\n * This error is thrown when a request encounters an invalid token error. Requests that use {@linkcode ArcGISIdentityManager} or\n * {@linkcode ApplicationCredentialsManager} in the `authentication` option the authentication manager will automatically try to generate\n * a fresh token using either {@linkcode ArcGISIdentityManager.refreshCredentials} or\n * {@linkcode ApplicationCredentialsManager.refreshCredentials}. If the request with the new token fails you will receive an `ArcGISAuthError`\n * if refreshing the token fails you will receive an instance of {@linkcode ArcGISTokenRequestError}.\n *\n * ```js\n * request(someUrl, {\n *   authentication: identityManager,\n *   // some additional options...\n * }).catch(e => {\n *   if(e.name === \"ArcGISAuthError\") {\n *     console.log(\"Request with a new token failed you might want to have the user authorize again.\")\n *   }\n *\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     console.log(\"There was an error refreshing the token you might want to have the user authorize again.\")\n *   }\n * })\n * ```\n */\nexport class ArcGISAuthError extends ArcGISRequestError {\n    /**\n     * Create a new `ArcGISAuthError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options of the request\n     */\n    constructor(message = \"AUTHENTICATION_ERROR\", code = \"AUTHENTICATION_ERROR_CODE\", response, url, options) {\n        super(message, code, response, url, options);\n        this.name = \"ArcGISAuthError\";\n        this.message =\n            code === \"AUTHENTICATION_ERROR_CODE\" ? message : `${code}: ${message}`;\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n    }\n    retry(getSession, retryLimit = 1) {\n        let tries = 0;\n        const retryRequest = (resolve, reject) => {\n            tries = tries + 1;\n            getSession(this.url, this.options)\n                .then((session) => {\n                const newOptions = Object.assign(Object.assign({}, this.options), { authentication: session });\n                return internalRequest(this.url, newOptions);\n            })\n                .then((response) => {\n                resolve(response);\n            })\n                .catch((e) => {\n                if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n                    retryRequest(resolve, reject);\n                }\n                else if (e.name === this.name &&\n                    e.message === this.message &&\n                    tries >= retryLimit) {\n                    reject(this);\n                }\n                else {\n                    reject(e);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            retryRequest(resolve, reject);\n        });\n    }\n}\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nexport function checkForErrors(response, url, params, options, originalAuthError) {\n    // this is an error message from billing.arcgis.com backend\n    if (response.code >= 400) {\n        const { message, code } = response;\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    // error from ArcGIS Online or an ArcGIS Portal or server instance.\n    if (response.error) {\n        const { message, code, messageCode } = response.error;\n        const errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n        if (code === 498 || code === 499) {\n            if (originalAuthError) {\n                throw originalAuthError;\n            }\n            else {\n                throw new ArcGISAuthError(message, errorCode, response, url, options);\n            }\n        }\n        throw new ArcGISRequestError(message, errorCode, response, url, options);\n    }\n    // error from a status check\n    if (response.status === \"failed\" || response.status === \"failure\") {\n        let message;\n        let code = \"UNKNOWN_ERROR_CODE\";\n        try {\n            message = JSON.parse(response.statusMessage).message;\n            code = JSON.parse(response.statusMessage).code;\n        }\n        catch (e) {\n            message = response.statusMessage || response.message;\n        }\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    return response;\n}\n/**\n * This is the internal implementation of `request` without the automatic retry behavior to prevent\n * infinite loops when a server continues to return invalid token errors.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n * @internal\n */\nexport function internalRequest(url, requestOptions) {\n    const defaults = getDefaultRequestOptions();\n    const options = Object.assign(Object.assign(Object.assign({ httpMethod: \"POST\" }, defaults), requestOptions), {\n        params: Object.assign(Object.assign({}, defaults.params), requestOptions.params),\n        headers: Object.assign(Object.assign({}, defaults.headers), requestOptions.headers)\n    });\n    const { httpMethod, rawResponse } = options;\n    const params = Object.assign({ f: \"json\" }, options.params);\n    let originalAuthError = null;\n    const fetchOptions = {\n        method: httpMethod,\n        signal: options.signal,\n        /* ensures behavior mimics XMLHttpRequest.\n        needed to support sending IWA cookies */\n        credentials: options.credentials || \"same-origin\"\n    };\n    // the /oauth2/platformSelf route will add X-Esri-Auth-Client-Id header\n    // and that request needs to send cookies cross domain\n    // so we need to set the credentials to \"include\"\n    if (options.headers &&\n        options.headers[\"X-Esri-Auth-Client-Id\"] &&\n        url.indexOf(\"/oauth2/platformSelf\") > -1) {\n        fetchOptions.credentials = \"include\";\n    }\n    let authentication;\n    // Check to see if this is a raw token as a string and create a IAuthenticationManager like object for it.\n    // Otherwise this just assumes that options.authentication is an IAuthenticationManager.\n    if (typeof options.authentication === \"string\") {\n        const rawToken = options.authentication;\n        authentication = {\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            getToken: () => {\n                return Promise.resolve(rawToken);\n            }\n        };\n        /* istanbul ignore else - we don't need to test NOT warning people */\n        if (!options.authentication.startsWith(\"AAPK\") && // doesn't look like an API Key\n            !options.suppressWarnings && // user doesn't want to suppress warnings for this request\n            !globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING // we havn't shown the user this warning yet\n        ) {\n            warn(`Using an oAuth 2.0 access token directly in the token option is discouraged. Consider using ArcGISIdentityManager or Application session. See https://esriurl.com/arcgis-rest-js-direct-token-warning for more information.`);\n            globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING = true;\n        }\n    }\n    else {\n        authentication = options.authentication;\n    }\n    // for errors in GET requests we want the URL passed to the error to be the URL before\n    // query params are applied.\n    const originalUrl = url;\n    return (authentication\n        ? authentication.getToken(url).catch((err) => {\n            /**\n             * append original request url and requestOptions\n             * to the error thrown by getToken()\n             * to assist with retrying\n             */\n            err.url = url;\n            err.options = options;\n            /**\n             * if an attempt is made to talk to an unfederated server\n             * first try the request anonymously. if a 'token required'\n             * error is thrown, throw the UNFEDERATED error then.\n             */\n            originalAuthError = err;\n            return Promise.resolve(\"\");\n        })\n        : Promise.resolve(\"\"))\n        .then((token) => {\n        if (token.length) {\n            params.token = token;\n        }\n        if (authentication && authentication.getDomainCredentials) {\n            fetchOptions.credentials = authentication.getDomainCredentials(url);\n        }\n        // Custom headers to add to request. IRequestOptions.headers with merge over requestHeaders.\n        const requestHeaders = {};\n        if (fetchOptions.method === \"GET\") {\n            // Prevents token from being passed in query params when hideToken option is used.\n            /* istanbul ignore if - window is always defined in a browser. Test case is covered by Jasmine in node test */\n            if (params.token &&\n                options.hideToken &&\n                // Sharing API does not support preflight check required by modern browsers https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request\n                typeof window === \"undefined\") {\n                requestHeaders[\"X-Esri-Authorization\"] = `Bearer ${params.token}`;\n                delete params.token;\n            }\n            // encode the parameters into the query string\n            const queryParams = encodeQueryString(params);\n            // dont append a '?' unless parameters are actually present\n            const urlWithQueryString = queryParams === \"\" ? url : url + \"?\" + encodeQueryString(params);\n            if (\n            // This would exceed the maximum length for URLs specified by the consumer and requires POST\n            (options.maxUrlLength &&\n                urlWithQueryString.length > options.maxUrlLength) ||\n                // Or if the customer requires the token to be hidden and it has not already been hidden in the header (for browsers)\n                (params.token && options.hideToken)) {\n                // the consumer specified a maximum length for URLs\n                // and this would exceed it, so use post instead\n                fetchOptions.method = \"POST\";\n                // If the token was already added as a Auth header, add the token back to body with other params instead of header\n                if (token.length && options.hideToken) {\n                    params.token = token;\n                    // Remove existing header that was added before url query length was checked\n                    delete requestHeaders[\"X-Esri-Authorization\"];\n                }\n            }\n            else {\n                // just use GET\n                url = urlWithQueryString;\n            }\n        }\n        /* updateResources currently requires FormData even when the input parameters dont warrant it.\n    https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm\n        see https://github.com/Esri/arcgis-rest-js/pull/500 for more info. */\n        const forceFormData = new RegExp(\"/items/.+/updateResources\").test(url);\n        if (fetchOptions.method === \"POST\") {\n            fetchOptions.body = encodeFormData(params, forceFormData);\n        }\n        // Mixin headers from request options\n        fetchOptions.headers = Object.assign(Object.assign({}, requestHeaders), options.headers);\n        // This should have the same conditional for Node JS as ArcGISIdentityManager.refreshWithUsernameAndPassword()\n        // to ensure that generated tokens have the same referer when used in Node with a username and password.\n        /* istanbul ignore next - karma reports coverage on browser tests only */\n        if ((typeof window === \"undefined\" ||\n            (window && typeof window.document === \"undefined\")) &&\n            !fetchOptions.headers.referer) {\n            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n        }\n        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n        if (!requiresFormData(params) && !forceFormData) {\n            fetchOptions.headers[\"Content-Type\"] =\n                \"application/x-www-form-urlencoded\";\n        }\n        /**\n         * Check for a global fetch first and use it if available. This allows us to use the default\n         * configuration of fetch-mock in tests.\n         */\n        /* istanbul ignore next coverage is based on browser code and we don't test for the absence of global fetch so we can skip the else here. */\n        return globalThis.fetch\n            ? globalThis.fetch(url, fetchOptions)\n            : getFetch().then(({ fetch }) => {\n                return fetch(url, fetchOptions);\n            });\n    })\n        .then((response) => {\n        // the request got back an error status code (4xx, 5xx)\n        if (!response.ok) {\n            // we need to determine if the server returned a JSON body with more details.\n            // this is the format used by newer services such as the Places and Style service.\n            return response\n                .json()\n                .then((jsonError) => {\n                // The body can be parsed as JSON\n                const { status, statusText } = response;\n                const { message, details } = jsonError.error;\n                const formattedMessage = `${message}. ${details ? details.join(\" \") : \"\"}`.trim();\n                throw new ArcGISRequestError(formattedMessage, `HTTP ${status} ${statusText}`, jsonError, url, options);\n            })\n                .catch((e) => {\n                // if we already were about to format this as an ArcGISRequestError throw that error\n                if (e.name === \"ArcGISRequestError\") {\n                    throw e;\n                }\n                // server responded w/ an actual error (404, 500, etc) but we could not parse it as JSON\n                const { status, statusText } = response;\n                throw new ArcGISRequestError(statusText, `HTTP ${status}`, response, url, options);\n            });\n        }\n        if (rawResponse) {\n            return response;\n        }\n        switch (params.f) {\n            case \"json\":\n                return response.json();\n            case \"geojson\":\n                return response.json();\n            case \"html\":\n                return response.text();\n            case \"text\":\n                return response.text();\n            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n            default:\n                return response.blob();\n        }\n    })\n        .then((data) => {\n        // Check for an error in the JSON body of a successful response.\n        // Most ArcGIS Server services will return a successful status code but include an error in the response body.\n        if ((params.f === \"json\" || params.f === \"geojson\") && !rawResponse) {\n            const response = checkForErrors(data, originalUrl, params, options, originalAuthError);\n            if (originalAuthError) {\n                /* If the request was made to an unfederated service that\n                didn't require authentication, add the base url and a dummy token\n                to the list of trusted servers to avoid another federation check\n                in the event of a repeat request */\n                const truncatedUrl = url\n                    .toLowerCase()\n                    .split(/\\/rest(\\/admin)?\\/services\\//)[0];\n                options.authentication.federatedServers[truncatedUrl] = {\n                    token: [],\n                    // default to 24 hours\n                    expires: new Date(Date.now() + 86400 * 1000)\n                };\n                originalAuthError = null;\n            }\n            return response;\n        }\n        else {\n            return data;\n        }\n    });\n}\n/**\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n *\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n *\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n *\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function request(url, requestOptions = { params: { f: \"json\" } }) {\n    return internalRequest(url, requestOptions).catch((e) => {\n        if (e instanceof ArcGISAuthError &&\n            requestOptions.authentication &&\n            typeof requestOptions.authentication !== \"string\" &&\n            requestOptions.authentication.canRefresh &&\n            requestOptions.authentication.refreshCredentials) {\n            return e.retry(() => {\n                return requestOptions.authentication.refreshCredentials();\n            }, 1);\n        }\n        else {\n            return Promise.reject(e);\n        }\n    });\n}\n//# sourceMappingURL=request.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nexport function appendCustomParams(customOptions, keys, baseOptions) {\n    const requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    const options = Object.assign(Object.assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce((value, key) => {\n        if (customOptions[key] ||\n            typeof customOptions[key] === \"boolean\" ||\n            (typeof customOptions[key] === \"number\" &&\n                customOptions[key] === 0)) {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce((value, key) => {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n//# sourceMappingURL=append-custom-params.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nexport function cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n//# sourceMappingURL=clean-url.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { __assign } from \"tslib\";\nimport { request, cleanUrl, appendCustomParams } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { getFeature } from '@esri/arcgis-rest-feature-layer';\n * //\n * const url = \"https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/Landscape_Trees/FeatureServer/0\";\n * //\n * getFeature({\n *   url,\n *   id: 42\n * }).then(feature => {\n *  console.log(feature.attributes.FID); // 42\n * });\n * ```\n * Get a feature by id.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the feature or the [response](https://developer.mozilla.org/en-US/docs/Web/API/Response) itself if `rawResponse: true` was passed in.\n */\nexport function getFeature(requestOptions) {\n    var url = cleanUrl(requestOptions.url) + \"/\" + requestOptions.id;\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options).then(function (response) {\n        if (options.rawResponse) {\n            return response;\n        }\n        return response.feature;\n    });\n}\n/**\n * ```js\n * import { queryFeatures } from '@esri/arcgis-rest-feature-layer';\n * //\n * queryFeatures({\n *   url: \"http://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer/3\",\n *   where: \"STATE_NAME = 'Alaska'\"\n * })\n *   .then(result)\n * ```\n * Query a feature service. See [REST Documentation](https://developers.arcgis.com/rest/services-reference/query-feature-service-layer-.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the query response.\n */\nexport function queryFeatures(requestOptions) {\n    var queryOptions = appendCustomParams(requestOptions, [\n        \"where\",\n        \"objectIds\",\n        \"relationParam\",\n        \"time\",\n        \"distance\",\n        \"units\",\n        \"outFields\",\n        \"geometry\",\n        \"geometryType\",\n        \"spatialRel\",\n        \"returnGeometry\",\n        \"maxAllowableOffset\",\n        \"geometryPrecision\",\n        \"inSR\",\n        \"outSR\",\n        \"gdbVersion\",\n        \"returnDistinctValues\",\n        \"returnIdsOnly\",\n        \"returnCountOnly\",\n        \"returnExtentOnly\",\n        \"orderByFields\",\n        \"groupByFieldsForStatistics\",\n        \"outStatistics\",\n        \"returnZ\",\n        \"returnM\",\n        \"multipatchOption\",\n        \"resultOffset\",\n        \"resultRecordCount\",\n        \"quantizationParameters\",\n        \"returnCentroid\",\n        \"resultType\",\n        \"historicMoment\",\n        \"returnTrueCurves\",\n        \"sqlFormat\",\n        \"returnExceededLimitFeatures\",\n        \"f\"\n    ], {\n        httpMethod: \"GET\",\n        params: __assign({ \n            // set default query parameters\n            where: \"1=1\", outFields: \"*\" }, requestOptions.params)\n    });\n    return request(cleanUrl(requestOptions.url) + \"/query\", queryOptions);\n}\n//# sourceMappingURL=query.js.map",":host {\n  display: block;\n}\n\n.feature {\n  max-width: 280px;\n  cursor: pointer;\n  /* shadow */\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.feature:hover {\n  /* deeper shadow */\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n#nearby {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 1rem;\n  margin: 1rem 0;\n}","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { queryFeatures } from '@esri/arcgis-rest-feature-layer';\n\n@Component({\n  tag: 'demeter-metadata',\n  styleUrl: 'demeter-metadata.css',\n  shadow: true,\n})\nexport class DemeterMetadata {\n\n  @Prop() featureId: string;\n  @Prop() featureLayerUrl: string;\n  @Prop() fields: any = [];\n  @Prop() distance: number = 20;\n\n  @State() feature: any;\n  @State() nearbyFeatures: any = [];\n  @State() similarFeatures: any = \"\";\n  @State() uniqueValues: any = \"\";\n  @State() totalFeatures: any = \"\";\n\n  async componentWillLoad() {\n    await this.getFeatureMetadata();\n  }\n  async getFeatureMetadata() {\n    const response = await queryFeatures({\n      url: this.featureLayerUrl,\n      where: \"OBJECTID = \" + this.featureId,\n      outFields: \"*\",\n      returnGeometry: true,\n      resultRecordCount: 1,\n      outSR: '4326'\n    })\n    //@ts-ignore\n    this.feature = response.features[0];\n    this.getNearbyFeatureMetadata(this.feature.geometry);\n    this.getSimilarFeatureMetadata('CMMN_NM', this.feature.attributes.CMMN_NM);\n    this.getTotalFeatureMetadata();\n\n  }\n\n  async getSimilarFeatureMetadata(field:string, value: string) {\n    const aggregate = await queryFeatures({\n      url: this.featureLayerUrl,\n      where: `${field} = '${value}'`,\n      returnCountOnly: true,\n      groupByFieldsForStatistics: field,\n      outFields: \"*\",\n      returnGeometry: false\n    })\n    //@ts-ignore\n    this.similarFeatures = aggregate.count;\n    console.log(\"Aggregate\", {aggregate});\n  }\n  async getTotalFeatureMetadata() {\n    const total = await queryFeatures({\n      url: this.featureLayerUrl,\n      returnCountOnly: true,\n      returnGeometry: false\n    })\n    //@ts-ignore\n    this.totalFeatures = total.count;\n  }\n\n  async getNearbyFeatureMetadata(location: any) {\n\n    const queryGeometry = {\n      x: location.x,\n      y: location.y,\n      spatialReference: {\n        wkid: 4326\n      }\n    };\n\n    const response = await queryFeatures({\n      url: this.featureLayerUrl,\n      outFields: \"*\",\n      returnGeometry: true,\n      outSR: '4326',\n      geometryType: \"esriGeometryPoint\",\n      geometry: queryGeometry,\n      distance: this.distance,\n      units: \"esriSRUnit_Meter\"\n    })\n    //@ts-ignore\n    this.nearbyFeatures = response.features;\n    // console.log(\"Nearby Features\", {features: response.features});\n  }  \n\n  convertAttributeByType(attribute: string, type: string) {\n    if (type === \"date\") {\n      return new Date(attribute).toLocaleDateString();\n    } else {\n      return attribute;\n    }\n\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <h3>Exploring this Feature</h3>\n        {this.renderMetadata(this.feature)}\n        \n        <h4>Similar Features</h4>\n        {JSON.stringify(this.similarFeatures)}\n\n\n        <h4>Total Features</h4>\n        {JSON.stringify(this.totalFeatures)}\n        \n        <h4>Nearby Features</h4>\n        <div id=\"nearby\">\n        {this.nearbyFeatures.map(feature => {\n          return(this.renderMetadata(feature));\n        })}\n        </div>\n\n        {/* <p>Feature: {JSON.stringify(this.feature)}</p> */}\n      </Host>\n    );\n  }\n\n\n  viewFeature(featureId: string) {\n    open(`./?featureId=${featureId}`, '_top')\n  }\n  private renderMetadata(feature: any) {\n    return <calcite-card\n      class=\"feature\"\n      onClick={() => this.viewFeature(feature.attributes.OBJECTID)}\n    ><ul>\n      {this.fields.map(field => {\n        return (\n          <li>\n            {field.name}: {this.convertAttributeByType(feature.attributes[field.attribute], field.type)}\n          </li>\n        );\n      })}\n    </ul></calcite-card>;\n  }\n}\n"],"mappings":"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"}